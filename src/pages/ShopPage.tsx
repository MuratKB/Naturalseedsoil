{
  "content": "import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Package, DollarSign, Mail, Truck } from 'lucide-react';\nimport { shopProducts } from '../data/shopProducts';\nimport { ShopProduct, ProductSize, CheckoutFormData } from '../types/shop';\nimport { Link } from 'react-router-dom';\n\nconst SHIPPING_COUNTRIES = [\n  { code: 'US', name: 'United States' },\n  { code: 'CA', name: 'Canada' },\n  { code: 'GB', name: 'United Kingdom' },\n  { code: 'DE', name: 'Germany' },\n  { code: 'FR', name: 'France' },\n  { code: 'IT', name: 'Italy' },\n  { code: 'ES', name: 'Spain' },\n  { code: 'SE', name: 'Sweden' },\n  { code: 'CH', name: 'Switzerland' },\n  { code: 'SG', name: 'Singapore' },\n  { code: 'TW', name: 'Taiwan' },\n  { code: 'KR', name: 'South Korea' },\n];\n\nconst ShopPage: React.FC = () => {\n  const [selectedProduct, setSelectedProduct] = useState<ShopProduct | null>(null);\n  const [selectedSize, setSelectedSize] = useState<ProductSize | null>(null);\n  const [quantity, setQuantity] = useState<number>(0);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [formData, setFormData] = useState<CheckoutFormData>({\n    name: '',\n    email: '',\n    company: '',\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    postalCode: '',\n    phone: '',\n  });\n\n  const handleSizeSelect = (product: ShopProduct, size: ProductSize) => {\n    setSelectedProduct(product);\n    setSelectedSize(size);\n    setQuantity(product.minOrder || 1);\n    setShowCheckout(false);\n  };\n\n  const handleQuantityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    if (selectedProduct?.minOrder && value < selectedProduct.minOrder) {\n      setQuantity(selectedProduct.minOrder);\n    } else {\n      setQuantity(value);\n    }\n  };\n\n  const handleBuyNow = () => {\n    if (selectedSize?.price === undefined) {\n      window.location.href = '/contact?bulk=true';\n      return;\n    }\n    setShowCheckout(true);\n  };\n\n  const handleCheckoutSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // Here you would integrate with your backend to create a Stripe session\n    // For now, we'll just show a success message\n    alert('Order submitted successfully! We will contact you for payment details.');\n    setShowCheckout(false);\n    setSelectedProduct(null);\n    setSelectedSize(null);\n    setQuantity(0);\n  };\n\n  const calculateTotal = () => {\n    if (!selectedSize?.price || !quantity) return 0;\n    return selectedSize.price * quantity;\n  };\n\n  return (\n    <div className=\"pt-20 pb-16\">\n      {/* Header */}\n      <div className=\"bg-primary-700 text-white py-16\">\n        <div className=\"container-custom text-center\">\n          <h1 className=\"section-title text-white mb-4\">Wholesale Products</h1>\n          <p className=\"text-primary-100 text-xl max-w-3xl mx-auto\">\n            Premium natural oils, soaps, and sage products for international B2B buyers\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container-custom py-12\">\n        {/* Product Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {shopProducts.map((product) => (\n            <motion.div\n              key={product.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"bg-white rounded-lg shadow-soft overflow-hidden\"\n            >\n              <div className=\"aspect-w-16 aspect-h-9 relative\">\n                <img\n                  src={product.image}\n                  alt={product.name}\n                  className=\"w-full h-64 object-cover\"\n                />\n              </div>\n              \n              <div className=\"p-6\">\n                <h2 className=\"text-2xl font-semibold mb-2\">{product.name}</h2>\n                <p className=\"text-gray-600 mb-4\">{product.description}</p>\n                \n                <div className=\"space-y-4\">\n                  {product.sizes.map((size) => (\n                    <div key={`${size.size}${size.unit}`} className=\"flex items-center justify-between\">\n                      <span className=\"font-medium\">\n                        {size.size}{size.unit}\n                      </span>\n                      {size.price ? (\n                        <div className=\"text-right\">\n                          <button\n                            onClick={() => handleSizeSelect(product, size)}\n                            className=\"btn-primary text-sm px-4 py-2\"\n                          >\n                            ${size.price.toLocaleString()}\n                          </button>\n                          {product.id === 'laurel-berry-oil' && (\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              <Truck className=\"w-3 h-3 inline mr-1\" />\n                              Shipping included\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <Link\n                          to=\"/contact?bulk=true\"\n                          className=\"text-primary-600 hover:text-primary-700 font-medium flex items-center\"\n                        >\n                          <Mail className=\"w-4 h-4 mr-1\" />\n                          Contact for Bulk\n                        </Link>\n                      )}\n                    </div>\n                  ))}\n                </div>\n\n                {product.minOrder && (\n                  <p className=\"text-sm text-gray-500 mt-4\">\n                    Minimum order: {product.minOrder} {product.sizes[0].unit}\n                  </p>\n                )}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Checkout Modal */}\n        {showCheckout && selectedProduct && selectedSize && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h3 className=\"text-2xl font-semibold\">Complete Your Order</h3>\n                  <button\n                    onClick={() => setShowCheckout(false)}\n                    className=\"text-gray-500 hover:text-gray-700\"\n                  >\n                    ×\n                  </button>\n                </div>\n\n                <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"font-medium\">{selectedProduct.name}</span>\n                    <span className=\"text-primary-600\">\n                      {selectedSize.size}{selectedSize.unit} × {quantity}\n                    </span>\n                  </div>\n                  <div className=\"text-xl font-semibold text-right\">\n                    Total: ${calculateTotal().toLocaleString()}\n                  </div>\n                </div>\n\n                <form onSubmit={handleCheckoutSubmit} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Full Name *\n                      </label>\n                      <input\n                        type=\"text\"\n                        required\n                        className=\"input\"\n                        value={formData.name}\n                        onChange={(e) => setFormData({...formData, name: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Company Name *\n                      </label>\n                      <input\n                        type=\"text\"\n                        required\n                        className=\"input\"\n                        value={formData.company}\n                        onChange={(e) => setFormData({...formData, company: e.target.value})}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Email *\n                    </label>\n                    <input\n                      type=\"email\"\n                      required\n                      className=\"input\"\n                      value={formData.email}\n                      onChange={(e) => setFormData({...formData, email: e.target.value})}\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Shipping Address *\n                    </label>\n                    <input\n                      type=\"text\"\n                      required\n                      className=\"input\"\n                      value={formData.address}\n                      onChange={(e) => setFormData({...formData, address: e.target.value})}\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        City *\n                      </label>\n                      <input\n                        type=\"text\"\n                        required\n                        className=\"input\"\n                        value={formData.city}\n                        onChange={(e) => setFormData({...formData, city: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        State/Province *\n                      </label>\n                      <input\n                        type=\"text\"\n                        required\n                        className=\"input\"\n                        value={formData.state}\n                        onChange={(e) => setFormData({...formData, state: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Postal Code *\n                      </label>\n                      <input\n                        type=\"text\"\n                        required\n                        className=\"input\"\n                        value={formData.postalCode}\n                        onChange={(e) => setFormData({...formData, postalCode: e.target.value})}\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Country *\n                    </label>\n                    <select\n                      required\n                      className=\"input\"\n                      value={formData.country}\n                      onChange={(e) => setFormData({...formData, country: e.target.value})}\n                    >\n                      <option value=\"\">Select a country</option>\n                      {SHIPPING_COUNTRIES.map(country => (\n                        <option key={country.code} value={country.code}>\n                          {country.name}\n                        </option>\n                      ))}\n                    </select>\n                    {formData.country && !SHIPPING_COUNTRIES.find(c => c.code === formData.country) && (\n                      <p className=\"text-red-600 text-sm mt-1\">\n                        For other countries, please contact us.\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Phone *\n                    </label>\n                    <input\n                      type=\"tel\"\n                      required\n                      className=\"input\"\n                      value={formData.phone}\n                      onChange={(e) => setFormData({...formData, phone: e.target.value})}\n                    />\n                  </div>\n\n                  <button \n                    type=\"submit\" \n                    className=\"btn-primary w-full\"\n                    disabled={!SHIPPING_COUNTRIES.find(c => c.code === formData.country)}\n                  >\n                    <DollarSign className=\"w-5 h-5 mr-2\" />\n                    Complete Order\n                  </button>\n\n                  <p className=\"text-sm text-gray-500 mt-4\">\n                    By completing this order, you agree to our terms of service and privacy policy.\n                    We'll contact you within 24 hours to arrange payment and confirm shipping details.\n                  </p>\n                </form>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Selected Product Details */}\n        {selectedProduct && selectedSize && !showCheckout && (\n          <div className=\"fixed bottom-0 left-0 right-0 bg-white border-t shadow-lg p-4 z-40\">\n            <div className=\"container-custom\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"font-medium\">{selectedProduct.name}</span>\n                  <span className=\"text-gray-600\">\n                    {selectedSize.size}{selectedSize.unit}\n                  </span>\n                  <div className=\"flex items-center space-x-2\">\n                    <label className=\"text-sm text-gray-600\">Quantity:</label>\n                    <input\n                      type=\"number\"\n                      min={selectedProduct.minOrder || 1}\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                      className=\"w-20 input py-1 px-2\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  {selectedSize.price && (\n                    <span className=\"text-xl font-semibold\">\n                      ${calculateTotal().toLocaleString()}\n                    </span>\n                  )}\n                  <button\n                    onClick={handleBuyNow}\n                    className=\"btn-primary\"\n                  >\n                    <Package className=\"w-5 h-5 mr-2\" />\n                    {selectedSize.price ? 'Buy Now' : 'Contact for Bulk'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ShopPage;\n"
}